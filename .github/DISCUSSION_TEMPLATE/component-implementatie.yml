title: "{Naam van de component}"
body:
  - type: textarea
    id: component-implementatie
    attributes:
      label: Component implementatie
      value: |
        In deze discussie definiëren en bespreken we de specificaties en implementatiekeuzes van dit component. Het doel is om één consistente en reproduceerbare beschrijving te schrijven, waarmee elke developer onafhankelijk van programmeertaal of framework, hetzelfde component kan bouwen.

        _Voeg hier een visuele referentie toe, zodat in één oogopslag duidelijk is over welk component het gaat._

        ## Relevante links

        _Voeg hier links toe naar relevante documentatie, discussies of issues die betrekking hebben op dit component. Dit helpt bij het centraliseren van informatie en het volgen van de voortgang._

        - [NL Design System GitHub Component discussie](https://github.com/orgs/nl-design-system/discussions/305)
        - [NL Design System GitHub Backlog](https://github.com/nl-design-system/backlog/issues/101)
        - [Rijkshuisstijl Community GitHub sp Styling]()
        - [Rijkshuisstijl Community - Community Components](https://github.com/orgs/nl-design-system/projects/69)

        ## Korte omschrijving

        _Beschrijf in één of twee zinnen wat dit component doet en waarvoor het bedoeld is._

        **Voorbeeld**: Korte sectie die als geheel een link is naar een gerelateerde pagina.

        ## Basis per framework

        _Beschrijf hier per framework welke basis gebruikt is voor de implementatie. Bijvoorbeeld dat je voor React gekozen hebt voor de Utrecht implementatie, en voor Angular gekozen hebt dezelfde zelf te schrijven._

        ## Naamgeving

        _Leg vast welke naamgeving wordt gebruikt, afgestemd op context (documentatie, CSS, frameworks). Dit bevordert herkenning en consistentie._

        | Gebruik       | Naam                                  |
        | ------------- | ------------------------------------- |
        | Documentatie  | **Voorbeeld**: Card as Link           |
        | CSS-klasse    | **Voorbeeld**: `.rhc-card-as-link`    |
        | React         | **Voorbeeld**: `<CardAsLink />`       |
        | Angular       | **Voorbeeld**: `<rhc-card-as-link />` |
        | Web Component | **Voorbeeld**: `<card-as-link />`     |

        ## Design tokens

        _Beschrijf welke design tokens de component beschikbaar heeft vanuit Token Studio._

        ## Gedrag

        _Beschrijf het verwachte gedrag van het component in verschillende staten (hover, focus, active, disabled). Geef ook aan hoe het zich gedraagt bij toetsenbordnavigatie of responsieve weergave._

        ## Eigenschappen

        _Leg alle relevante properties vast die nodig zijn voor consistente implementatie._

        | Eigenschap | Type    | Beschrijving                             | Verplicht | Standaard |
        | ---------- | ------- | ---------------------------------------- | --------- | --------- |
        | `label`    | string  | De tekst die in de component verschijnt. | Ja        | –         |
        | `variant`  | string  | Bijvoorbeeld: `primary`, `secondary`.    | Nee       | `primary` |
        | `disabled` | boolean | Maakt de component niet-interactief.     | Nee       | `false`   |
        | `onClick`  | functie | Wordt aangeroepen bij interactie.        | Nee       | –         |

        > Voeg alle benodigde properties toe, inclusief types, defaults en of ze verplicht zijn.

        ## Implementatie keuzes

        _Geef context bij technische of functionele keuzes. Benoem ook afwijkingen van standaarden of andere implementaties als die er zijn. Voeg hier onderwerpen aan toe indien van toepassing._

        ### Afwijkingen

        - Benoem afwijkingen ten opzichte van bestaande implementaties of richtlijnen (bijv. NLDS, Rijkshuisstijl).
        - Licht toe waarom deze keuzes zijn gemaakt.

        ## Vragen of discussiepunten

        _Noteer hier openstaande vragen of beslissingen die nog besproken moeten worden._
